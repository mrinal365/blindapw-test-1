{"version":3,"sources":["images/mintprice.png","images/story.png","images/tel.png","images/twi.png","images/smolpunks.png","images/pic.gif","components/Navbar/NavbarElements.js","Connector/Connectors.js","components/Navbar/index.js","components/Timeline/index.js","pages/index.js","pages/gallery.js","Contract/contractInstance.js","pages/mint.js","pages/contact.js","pages/signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","injected","InjectedConnector","supportedChainIds","Navbar","props","useWeb3React","active","activate","account","library","connector","deactivate","a","console","log","to","style","height","src","require","alt","activeStyle","color","onClick","Timeline","background","paddingTop","textAlign","className","contentStyle","contentArrowStyle","borderRight","date","iconStyle","icon","Home","pic","mintprice","display","width","justifyContent","alignItems","story","padding","marginRight","tel","twi","Gallery","minHeight","maxWidth","marginBottom","gif","marginTop","contract","Web3","window","ethereum","eth","Contract","abi","config","contractAddress","Mint","useState","networkID","setNetworkID","setTotalSupply","cost","setCost","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","dnsName","getNetworkId","request","method","networkId","changeNetworkToDoge","params","chainId","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","rpcUrls","getPrice","methods","PRICE","call","then","res","getTotalSupply","totalSupply","useEffect","flexDirection","paddingBottom","placeholder","onChange","e","target","value","border","gasLimit","totalCostWei","String","totalGasLimit","nftName","mint","send","from","utils","toWei","once","err","receipt","Contact","SignUp","getLibrary","provider","Web3Provider","App","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.add87e30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mintprice.97d3342e.png\";","module.exports = __webpack_public_path__ + \"static/media/story.d47f90f9.png\";","module.exports = __webpack_public_path__ + \"static/media/tel.3ab89f05.png\";","module.exports = __webpack_public_path__ + \"static/media/twi.6ca2d940.png\";","module.exports = __webpack_public_path__ + \"static/media/smolpunks.15098561.png\";","module.exports = __webpack_public_path__ + \"static/media/pic.4b18485e.gif\";","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #F771A6;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 30px;\n  align-items:center;\n  z-index: 10;\n\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n  &.active {\n    color: yellow;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n\n  /* Second Nav */\n  /* margin-right: 24px; */\n\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  background-color:white;\n  padding:20px 20px;\n  color:black;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #256ce1;\n  padding: 10px 22px;\n  color: #fff;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  /* Second Nav */\n  margin-left: 24px;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 2000, 4, 5, 42],\r\n})\r\n","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink\n} from './NavbarElements';\nimport { injected } from '../../Connector/Connectors';\nimport { useWeb3React } from '@web3-react/core';\n\n\n\nconst Navbar = (props) => {\n  const { active, account, library, connector, activate, deactivate } = useWeb3React();\n\n  async function connect() {\n    try {\n      console.log(\"connect function try block\")\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n  async function disconnect() {\n    try {\n      console.log(\"disconnect function try block\")\n      await deactivate()\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n  return (\n    <>\n      <Nav>\n        <NavLink to='/'>\n          <img style={{ height: 60 }} src={require('../../images/smolpunks.png')} alt='logo' />\n        </NavLink>\n        <Bars />\n        <NavMenu>\n          <NavLink to='/home' activeStyle>\n            Home\n          </NavLink>\n          <NavLink to='/mint' activeStyle>\n            Mint\n          </NavLink>\n          <NavLink to='/gallery' activeStyle>\n            Gallery\n          </NavLink>\n\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        {active ? (\n          <>\n            {/* <p style={{ color: 'white',fontSize:14 }} onClick={disconnect}>{account.slice(0, 5) + \"...\" + account.slice(-4, -1)}</p> */}\n            <NavBtn>\n              <p style={{ color: 'black' }} onClick={disconnect}>Disconnect</p>\n            </NavBtn>\n          </>\n        )\n          :\n          <NavBtn>\n            <p style={{ color: 'black' }} onClick={connect}>Connect</p>\n          </NavBtn>\n        }\n\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement\r\n} from \"react-vertical-timeline-component\";\r\n// import SchoolIcon from \"@material-ui/icons/School\";\r\n// import WorkIcon from \"@material-ui/icons/Work\";\r\n// import StarIcon from \"@material-ui/icons/Star\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\n// import \"./styles.css\";\r\n\r\nexport default function Timeline() {\r\n  return (\r\n    <div style={{background:'#F771A6',paddingTop:80}}>\r\n      <h1 style={{textAlign:'center'}}>Roadmap</h1>\r\n      <br/>\r\n      <br/>\r\n      <VerticalTimeline>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          contentStyle={{ background: \"white\", color: \"black\" }}\r\n          contentArrowStyle={{ borderRight: \"7px solid  white\" }}\r\n          date=\"20% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">NFT Giveaway</h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4> */}\r\n          <p style={{color:'purple'}}>\r\n          A random airdrop of 20 NFTs to early community members in our Telegram.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"50% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">SmolPunks 10x Baby Bonus</h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">\r\n            San Francisco, CA\r\n          </h4> */}\r\n          <p style={{color:'purple'}}>\r\n          On the 388.5th sale, there will be a payout 10x the mint price in $wDOGE to 4 community members in our Telegram.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"90% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">90% Sold</h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">\r\n            Los Angeles, CA\r\n          </h4> */}\r\n          <p style={{color:'purple'}}>\r\n          SmolPunks Merch store will be rolled out where NFT holders will get first dibs and exclusive access to limited edition t-shirts, hats, and hoodies. Non-NFT holders will be given access at a later date.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"100% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">SmolPunks Sweeper</h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">\r\n            San Francisco, CA\r\n          </h4> */}\r\n          <p style={{color:'purple'}}>A liquidity wallet will be created that will be used to buy the floor of SmolPunks NFTs at a TBD time and when available on a marketplace. </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--education\"\r\n          date=\"100% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n          TeenPunks\r\n          </h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">Online Course</h4> */}\r\n          <p style={{color:'purple'}}>\r\n          We will create a limited collection of stylized TeenPunks and airdrop them to all holders.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--education\"\r\n          date=\"100% Sold\"\r\n          iconStyle={{ background: \"black\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n          The PUNK-A-TRON Arcade\r\n          </h3>\r\n          {/* <h4 className=\"vertical-timeline-element-subtitle\">Certification</h4> */}\r\n          <p style={{color:'purple'}}>\r\n          We will build an even bigger arcade than we planned for previously that will host approximately 10 titles by the end of this year. The games will feature retro old school classics. All NFT holders will be able to stake their NFTs to earn SmolPunk Tokens from transaction fees paid by players to play the games to compete head to head for prizes such popular NFTs, and SOL tokens.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        \r\n        <VerticalTimelineElement\r\n          iconStyle={{ background: \"green\", color: \"#fff\" }}\r\n          icon={<p></p>}\r\n        />\r\n      </VerticalTimeline>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { injected } from '../Connector/Connectors';\nimport { useWeb3React } from '@web3-react/core';\nimport './home.css';\nimport pic from '../images/pic.gif'\nimport mintprice from '../images/mintprice.png'\nimport story from '../images/story.png';\nimport tel from '../images/tel.png';\nimport twi from '../images/twi.png';\nimport Timeline from '../components/Timeline/index';\n\nconst Home = () => {\n  const { active, account, library, connector, activate, deactivate } = useWeb3React();\n\n  return (\n    <div >\n      <div className='home-wrapper'>\n        {/* {active?<h1>Home</h1>:<p>noott</p>} */}\n        <div className='text-wrapper'>\n          <h1 style={{ color: 'black' }}>777 unique SmolPunks live on DogeChain</h1>\n          <br />\n          <p style={{ color: 'white' }}>\n            SmolPunks is a limited NFT collection on the DogeChain blockchain. Supply is currently capped at 777.\n            <br /><br />\n            All SmolPunks are programmatically generated to include numerous traits and rarity. Adopting a SmolPunks also gives you access to features within our SmolPunks Arcade which will feature a series of old school classic games similar to Tetris, Flappy Bird, and more.\n            <br /><br />\n            All SmolPunks will be revealed immediately after being minted along with activating special community features based on the roadmap.\n\n          </p>\n          <br />\n\n        </div>\n\n        <div className='pic-wrapper'>\n          <img style={{ height: 300 }} src={pic} />\n        </div>\n      </div>\n\n      <div className='home-wrapper'>\n\n        <div className='pic-wrapper'>\n          <img style={{ height: 300 }} src={mintprice} />\n        </div>\n        <div className='text-wrapper'>\n          <h2 style={{ color: 'black' }}>\n            These pixel babies earn you passive income for life. Profits go to the community.\n          </h2>\n          <br />\n          <br />\n          <h3 style={{ color: 'white' }}>\n            Price: 777 $wDoge\n          </h3>\n          <br />\n          <h3 style={{ color: 'white' }}>\n            Mint Date: September ?th, 2022\n          </h3>\n        </div>\n\n\n      </div>\n      <Timeline />\n\n\n      <div className='story-wrapper' style={{ paddingTop: 70 }}>\n        {/* {active?<h1>Home</h1>:<p>noott</p>} */}\n        <div style={{ display: 'flex', width: \"100%\", justifyContent: 'center', alignItems: 'center' }}>\n          <h1 style={{ color: 'black' }}>The Story</h1>\n        </div>\n        <br />\n        <div style={{ display: 'flex', width: \"100%\", justifyContent: 'center', alignItems: 'center' }}>\n          <img style={{ width: '80%' }} src={story} />\n        </div>\n        <br />\n        <br />\n        <p style={{ color: 'white' }}>\n          SmolPunks are the spawn of what happens when you have a bunch of badass CryptoPunks mixed with pop culture, internet memes and peyote. This lot are looking for a new home and are up for adoption. They were originally going to find new homes on Ethereum, but it was too old, congested and full of other babies who looked neglected. The SmolPunks banded together and set a course for uncharted territory - DogeChain. It’s every pixel's dream and now they have their chance at the big leagues.\n          All they need is the right person to take them under their wing and teach them the ropes.\n          <br />\n          <br />\n          These punks may be small but they have big dreams and their properties uniquely reflect who they are and promise to reward their owners handsomely.\n\n        </p>\n        <br />\n\n        <br />\n        <br />\n      </div>\n      <div style={{ background: 'black',color:'white', padding: '20px 0px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <a>\n          <img style={{height:40,marginRight:20}} src={tel}/>\n        </a>\n        <a>\n          <img style={{height:37}} src={twi}/>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport gif from '../images/pic.gif'\nimport { useWeb3React } from '@web3-react/core';\n\n\n\nconst Gallery = () => {\n  const { active, account, library, connector, activate, deactivate } = useWeb3React();\n\n  return (\n    <div\n      style={{\n        // display: 'flex',\n        justifyContent: 'center',\n        padding: 20,\n        alignItems: 'center',\n        minHeight: '100vh',\n        width: '100%',\n        maxWidth: '100%',\n        height: 'auto',\n        background: '#FFE600'\n      }}\n    >\n      {active?\n      <>\n      <p style={{textAlign:'center',marginBottom:20,color:'purple'}}>List of NFT's</p>\n      <div >\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      <img style={{ width: 270,marginRight:10,marginBottom:10 }} src={gif} />\n      </div>\n      </>\n        :\n        <><p style={{textAlign:'center',color:'purple',marginTop:200}}>Connect Wallet</p></>}\n      {/* <div>\n        <div style={{ border: '10px solid black', marginRight: 10 }}>\n          <img style={{ width: 300 }} src={gif} />\n        </div>\n        <div style={{ border: '10px solid black', marginRight: 10 }}>\n          <img style={{ width: 300 }} src={gif} />\n        </div>\n        <div style={{ border: '10px solid black', marginRight: 10 }}>\n          <img style={{ width: 300 }} src={gif} />\n        </div>\n        <div style={{ border: '10px solid black', marginRight: 10 }}>\n          <img style={{ width: 300 }} src={gif} />\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import Web3 from \"web3\";\r\nimport abi from './abi.json';\r\nimport config from './Config.json';\r\n\r\nconst web3=new Web3(window.ethereum);\r\n\r\nconst contract=new web3.eth.Contract(\r\n    abi,\r\n    config.contractAddress\r\n);\r\n\r\nexport default contract;","import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport config from '../Contract/Config.json';\nimport { injected } from '../Connector/Connectors';\nimport abi from '../Contract/abi.json';\nimport Web3EthContract from \"web3-eth-contract\";\nimport { useWeb3React } from '@web3-react/core';\nimport contract from '../Contract/contractInstance';\nimport dnsResolver from '@dogetaglord/dns-resolver';\nimport gif from '../images/pic.gif'\n\n// import { useState } from 'react';\n\nconst Mint = () => {\n  const { active, account, library, connector, activate, deactivate } = useWeb3React();\n  const [networkID, setNetworkID] = useState(null);\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [cost, setCost] = useState(null);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(\"\");\n  const [mintAmount, setMintAmount] = useState(null);\n  const [dnsName, setDnsName] = useState(\"\")\n\n  const mintNFT = () => {\n    let gasLimit = config.gasLimit;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${config.nftName}...`);\n    setClaimingNft(true);\n    contract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: config.contractAddress,\n        from: account,\n        value: Web3.utils.toWei(String(mintAmount * config.cost), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${config.nftName} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        // dispatch(fetchData(blockchain.account));\n      });\n  }\n\n  const getNetworkId = async () => {\n    const networkId = await window.ethereum.request({\n      method: \"net_version\",\n    });\n    console.log(\"network id\", networkId)\n    setNetworkID(networkId)\n  }\n\n  const changeNetworkToDoge = async () => {\n    await window.ethereum.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: '0x7D0',\n          chainName: 'DogeChain',\n          nativeCurrency: {\n            name: 'DogeCHain',\n            symbol: 'DOGE', // 2-6 characters long\n            decimals: 18\n          },\n          blockExplorerUrls: ['https://dogechain.info/chain/Dogecoin'],\n          rpcUrls: ['https://rpc01-sg.dogechain.dog/'],\n        },\n      ],\n    });\n\n\n    await window.ethereum.request({  // don't use send()\n      method: \"eth_requestAccounts\"\n    });\n  }\n\n  const getPrice = async () => {\n    let mintPrice = await contract.methods.PRICE()\n      .call()\n      .then((res) => {\n        console.log(\"res\", res);\n        setCost(res)\n      });\n  }\n  const getTotalSupply = async () => {\n    let totalSupply = await contract.methods.totalSupply()\n      .call()\n      .then((res) => {\n        console.log(\"res\", res);\n        setTotalSupply(res);\n      });\n  }\n  // const enableTransactionAccess = async () => {\n  //   const accounts = await window.ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n  // }\n  // const getDNSName = async () => {\n  //   let name = await dnsResolver.getPrimaryName(window.ethereum, account)\n  //   console.log(\"name\", name)\n  //   setDnsName(name)\n  // }\n  useEffect(() => {\n    if (account) {\n      // let web3 = new Web3(window.ethereum)\n\n      // let contract = new web3.eth.Contract(abi, config.contractAddress, {\n      //   from: account\n      // })\n\n      // let contract = new Web3EthContract(\n      //   abi,\n      //   config.contractAddress\n      // );\n      console.log(contract)\n      getNetworkId()\n      if (networkID == config.networkId) {\n        console.log(\"right network\")\n        // enableTransactionAccess()\n      }\n      else {\n        changeNetworkToDoge()\n        // enableTransactionAccess()\n\n      }\n      getTotalSupply()\n      getPrice();\n      // getDNSName();\n    }\n\n  }, [networkID, account])\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection:'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '90vh',\n        height:'auto',\n        background:'#FFE600',paddingTop:100,paddingBottom:200\n      }}\n    >\n      \n      {account ?\n        <>\n          <img style={{width:'300px'}} src={gif}/>\n          <br/>\n          <p>{mintAmount}</p>\n          <br/>\n          <p style={{textAlign:'center',color:'PURPLE'}}>One BabyPixel Cost: 40 Doge</p>\n          <br/>\n          <p>{feedback}</p>\n          <br/> \n          <input\n            placeholder='Enter Mint Amount'\n            className='inputMintBox'\n            style={{padding:\"10px 15px\"}}\n            onChange={(e) => {\n              setMintAmount(e.target.value)\n            }}\n          >\n          </input>\n          <br/>\n          <button style={{padding:'20px',background:'white',border:'none'}} onClick={(mintAmount>0)?mintNFT:console.log(\"none\")}>Mint</button>\n          <p>{dnsName}</p>\n          <p>{feedback}</p>\n        </>\n        : <p style={{color:'PURPLE'}}>connect wallet</p>}\n    </div>\n  );\n};\n\nexport default Mint;\n","import React from 'react';\n\nconst Contact = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Contact Us</h1>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst SignUp = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Sign Up</h1>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages';\nimport Gallery from './pages/gallery';\nimport Mint from './pages/mint';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\n//Wallet connection imports\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3 from 'web3';\n\n//Web3 Pprovider\nfunction getLibrary(provider, connector) {\n  return new Web3Provider(provider);\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact  >\n            <Home/>\n          </Route>\n          <Route path='/home'>\n            <Home/>\n          </Route>\n          <Route path='/gallery'>\n            <Gallery/>\n          </Route>\n          <Route path='/mint' >\n            <Mint/>\n          </Route>\n          <Route path='/contact-us' >\n            <Contact/>\n          </Route>\n          <Route path='/sign-up' >\n            <SignUp/>\n          </Route>\n        </Switch>\n      </Router>\n    </Web3ReactProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}